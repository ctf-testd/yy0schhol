version: "3.1"

x-healthcheck:
  &healthcheck
  test: curl -f http://localhost/
  interval: 30s
  timeout: 10s
  retries: 5
  start_period: 10s

x-envvar:
  &envvar
  DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-supersecretkey}
  JWT_SECRET_KEY: ${JWT_SECRET_KEY:-supersecretkey}
  SWAGGER_URL: ${SWAGGER_URL:-"http://127.0.0.1:8000/"}
  POSTGRES_DB: ${POSTGRES_DB:-postgres}
  POSTGRES_USER: ${POSTGRES_USER:-admin}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
  DB_HOST: ${DB_HOST:-db}
  DB_PORT: ${DB_PORT:-5432}

services:

  db:
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      << : *envvar
    restart: always
    healthcheck:
      << : *healthcheck
      test: pg_isready -U ${POSTGRES_USER:-admin} -d ${POSTGRES_DB:-db}

  django:
    image: ${IMAGE_BACKEND:-ghcr.io/n57uctf/store-api-backend:main}
    build:
      context: .
    ports:
      - 8000:8000
    environment:
      << : *envvar
    volumes:
      - .:/src
    restart: always
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      << : *healthcheck
      test: curl http://127.0.0.1:8000/

  nginx:
    image: ${IMAGE_FRONTEND:-ghcr.io/n57uctf/store-api-frontend:main}
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    depends_on:
      django:
        condition: service_started
    ports:
      - "4444:8080"
    volumes:
      - ./static/:/static
    restart: always
    healthcheck:
      << : *healthcheck
      test: curl http://127.0.0.1:8080/

volumes:
  pgdata: {}